// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

package wat;

import "google/protobuf/timestamp.proto";

// The chat service definition.
service Chat {
  rpc verifyLogin (LoginRequest) returns (LoginReply) {}
  rpc sendMessage (ChatMessageReply) returns (Request) {}
  rpc RouteConversation (Request) returns (stream ConversationReply) {}
  rpc RouteChat (ConversationRequest) returns (stream ChatMessageReply) {}
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
}

message LoginReply {
    string username = 1;
    string messageOfTheDay = 2;
}

message Request {
    string username = 1;
}

message ChatMessageReply {
    int32 conversationId = 1;
    string content = 2;
    google.protobuf.Timestamp sent = 3;
    string sentByUser = 4;
}

message ConversationRequest {
    int32 id = 1;
    Request request = 2;
}

message ConversationReply {
    int32 id = 1;
    google.protobuf.Timestamp fromDate = 2;
    string name = 3;
    ChatMessageReply latestMessage = 4;
}